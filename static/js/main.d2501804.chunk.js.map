{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","arr","split","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","join","i","length","charAt","slice","str","App","setMode","aboutText","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d2501804.chunk.js","sourcesContent":["import React from 'react'\r\n// import {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        \r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n       <div className=\"container-fluid\">\r\n       {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n         <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n         <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\r\n           <span className=\"navbar-toggler-icon\"></span>\r\n         </button>\r\n         <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n           <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n             <li className=\"nav-item\">\r\n               {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n               <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n             \r\n             </li>\r\n             {/* <li className=\"nav-item\">\r\n               <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n             </li> */}\r\n         \r\n           </ul>\r\n          {/* <form className=\"d-flex\">\r\n             <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n             <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n    </form> */}\r\n\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n         </div>\r\n       </div>\r\n     </nav>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text,setText] = useState(\"\");\r\n\r\n   const handleUpClick = () =>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleLoClick = () =>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const clearText = () =>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    const handleCopy = () =>{\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n   let arr = text.split(\" \");\r\n    const handleCapital = () =>{\r\n        for (var i = 0; i < arr.length; i++) {\r\n            arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n           \r\n        }\r\n        let str = arr.join(\" \");\r\n        setText(str);\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n           <h1>{props.heading}</h1>\r\n            <div className=\"mb-3 my-4\">\r\n            <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'#042743'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\" ></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={clearText}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleSpaces}>Remove Extra Spaces</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCapital}>Capitalize Case</button>\r\n        </div>\r\n        <div className=\"container my-4\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} word and {text.length} characters</p>\r\n            <p>{0.008*text.split(\" \").length} minute(s) required to read this text</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length > 0?text:\"Enter something in the above text box to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  \nconst toggleMode= ()=>{\n  if (mode === 'light'){\n    setMode('dark');\n    document.body.style.backgroundColor = '#042743';\n  }else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n  }\n  \n} \n\n  return (\n   <>\n   {/* <Router> */}\n  <Navbar title=\"TextUtils\" mode={mode} aboutText=\"About_TextUtils\" toggleMode={toggleMode}/> \n  {/* <Navbar /> */}\n\n  <div className=\"container my-3\">\n\n  {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n{/*           \n          <Route path=\"/\" exact> */}\n          <TextForm heading=\"Enter the text to analyze\" mode={mode}/>\n          {/* </Route> */}\n  {/* </Switch> */}\n  </div>\n{/* </Router> */}\n\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}